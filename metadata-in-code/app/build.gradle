import java.util.function.Predicate

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.9.13'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // For the ByteBuddy tests.
    implementation 'net.bytebuddy:byte-buddy:1.12.12'

    // For the logger tests.
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    // For the JSON tests.
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
}

application {
    // Define the main class for the application.
    mainClass = 'org.graalvm.example.App'
}
run {
    systemProperty "java.library.path", (findProperty("javaPath") ?: "")
}
test {
    useJUnitPlatform()
    test {
        testLogging {
            events 'PASSED', 'FAILED', 'SKIPPED'
        }
    }
}

graalvmNative {
    agent {
        enabled = false
        Predicate<Task> taskPredicate = {t -> false}
        tasksToInstrumentPredicate = taskPredicate
    }

    binaries {
        test {
        }
    }
}
