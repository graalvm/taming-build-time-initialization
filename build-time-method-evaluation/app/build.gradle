import java.util.function.Predicate

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.9.13'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // For the ByteBuddy tests.
    implementation 'net.bytebuddy:byte-buddy:1.12.12'

    // For the logger tests.
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    // For the JSON tests.
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
}

application {
    // Define the main class for the application.
    mainClass = 'org.graalvm.example.safecomp.SafeComposition'
}

test {
    useJUnitPlatform()
    test {
        testLogging {
            events 'PASSED', 'FAILED', 'SKIPPED'
        }
    }
}

graalvmNative {
    agent {
        enabled = false
        Predicate<Task> taskPredicate = {t -> false}
        tasksToInstrumentPredicate = taskPredicate
    }

    binaries {
        test {
            // Enables evaluating methods marked with @Constant during the image build.
            buildArgs.add("-H:+UseExperimentalBuildTimeEvaluation")
            // Allows all return types in @Constant methods. This can be changed for the restricted mode.
            buildArgs.add("-H:-UseStrictBuildTimeEvaluation")
            // Allows any class to be initialized at image build time, as long as no object of such a class ends up in the image heap.
            // Note that this also currently disables automatically proving classes safe for build time initialization.
            buildArgs.add("-H:+UseNewExperimentalClassInitialization")
            // These classes were previously proven to be safe for build time initialization.
            // This is a patch until these end up in the native build tools.
            buildArgs.add("--initialize-at-build-time=org.junit.platform.launcher.core.SessionPerRequestLauncher,org.junit.platform.launcher.core.DefaultLauncher,org.junit.platform.launcher.LauncherSessionListener\$1,org.junit.platform.launcher.core.EngineExecutionOrchestrator,org.junit.platform.launcher.core.ListenerRegistry,org.junit.platform.launcher.listeners.UniqueIdTrackingListener,org.junit.platform.launcher.core.LauncherDiscoveryResult,org.junit.platform.launcher.core.LauncherConfigurationParameters\$ParameterProvider\$2,org.junit.jupiter.engine.JupiterTestEngine,org.junit.platform.launcher.core.LauncherConfigurationParameters\$ParameterProvider\$3,org.junit.platform.engine.UniqueId,org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor,org.junit.platform.engine.UniqueId\$Segment,org.junit.platform.engine.TestDescriptor\$Type,org.junit.jupiter.engine.config.CachingJupiterConfiguration,org.junit.jupiter.engine.config.DefaultJupiterConfiguration,org.junit.jupiter.api.DisplayNameGenerator\$Standard,org.junit.platform.engine.support.descriptor.MethodSource,org.junit.jupiter.api.TestInstance\$Lifecycle,org.junit.platform.engine.support.descriptor.ClassSource,org.junit.jupiter.api.extension.ConditionEvaluationResult,org.junit.jupiter.engine.execution.InvocationInterceptorChain")
            // Used by the SystemPropertyAtBuildTime test
            buildArgs.add('-Dorg.graalvm.example.property=image-build-time')
            buildArgs.add('-Dremove.UnreachableClass=true')
            buildArgs.add("--initialize-at-build-time=org.graalvm.example.UnreachableClass")
            // Classes generated by ByteBuddy reference this loader
            buildArgs.add("--initialize-at-build-time=net.bytebuddy.dynamic.loading.ByteArrayClassLoader")
            // Needed by the JsonParsingTest as this class ends up in the image heap.
            buildArgs.add("--initialize-at-build-time=org.graalvm.example.SimplifiedReflectConfig")
        }
    }
}
